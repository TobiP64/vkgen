stages:
    - check
    - build
    - release

.rust-default:
    image: registry.gitlab.com/tobip64/rust-ci-docker-image:latest
    cache:
        key: $CI_JOB_NAME
        paths: [target/]
    interruptible: true
    timeout: 10m
    parallel:
      matrix:
        - CHANNEL: [+stable, +beta, +nightly]
    rules:
        - if: $CHANNEL == "+stable"
          allow_failure: false
        - allow_failure: true
    before_script:
        - rustup --version && rustc --version && cargo --version

test:
    extends: .rust-default
    stage: check
    script:
        - cargo $CHANNEL test --verbose --all-features --no-fail-fast -- -Z unstable-options --format json | cargo2junit > results.xml
    artifacts:
        when: always
        reports:
            junit:
                - results.xml

bench:
    extends: .rust-default
    stage: check
    script:
        - cargo $CHANNEL bench --verbose
    artifacts:
        when: always
        reports:
            metrics: metrics.txt

clippy:
    extends: .rust-default
    stage: check
    script:
        - cargo $CHANNEL clippy --verbose --all-targets --all-features --message-format=json | gitlab-clippy > gl-code-quality-report.json
    artifacts:
        when: always
        reports:
            codequality: gl-code-quality-report.json

check:fmt:
    extends: .rust-default
    stage: check
    parallel:
    script:
        - cargo fmt -- --check
    allow_failure: true
    rules:
        - if: $RUN_RUST_FMT

check:audit:
    extends: .rust-default
    stage: check
    parallel:
    script:
        - cargo audit

build:docs:
    extends: .rust-default
    stage: build
    parallel:
    script:
        - cargo doc --no-deps
    artifacts:
        paths:
            - target/doc
    rules:
        - if: $CI_COMMIT_TAG

release:pages:
    stage: release
    image: alpine:latest
    needs: [ "clippy", "test", "build:docs" ]
    variables:
        GIT_STRATEGY: none
    script:
        - mv target/doc public/
        - echo '<meta http-equiv="refresh" content="0; url={{ LIBRARY NAME }}">' > public/index.html
    artifacts:
        paths:
            - public/
    rules:
        - if: $CI_COMMIT_TAG

release:gitlab:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs: ["clippy", "test"]
    variables:
        GIT_STRATEGY: none
    script:
        - release-cli create \
            --name $CI_COMMIT_TAG \
            --description $CI_COMMIT_MESSAGE \
            --tag-name $CI_COMMIT_TAG \
            --ref $CI_COMMIT_SHA
    release:
        name: $CI_COMMIT_TAG
        description: './CHANGELOG.md'
        tag_name: $CI_COMMIT_TAG
        ref: $CI_COMMIT_SHA
    rules:
        - if: $CI_COMMIT_TAG
          when: manual
